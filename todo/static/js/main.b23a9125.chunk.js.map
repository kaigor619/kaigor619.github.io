{"version":3,"sources":["components/todo-header.js","components/todo-search.js","components/todo-list-item.js","components/todo-list.js","components/btn-filter.js","components/filter.js","components/app.js","index.js"],"names":["ToDoHeader","_ref","toDo","done","react_default","a","createElement","className","ToDoAddSearch","state","label","inputChange","e","_this","props","todoSearch","target","value","setState","formSubmit","preventDefault","addListItem","onSubmit","this","placeholder","onChange","type","onClick","React","Component","ToDoListItem","_this$props","eventDelete","toggleImportant","toggleDone","_this$props$done","_this$props$important","important","classNames","classBtnDone","ToDoList","todos","elements","map","elem","ClassNames","visible","id","itemsProps","Object","objectWithoutProperties","key","todo_list_item","assign","BtnFilter","changeStatus","changeFilter","name","active","style","boxShadow","Filter","status","btn_filter","App","minid","uniqueId","createItem","createFilter","bool","todolist","addItem","text","arr","slice","push","deleteItem","_ref2","filter","val","_ref3","item","_ref4","str","_ref5","forEach","i","indexOf","fielterList","arr_list","_ref6","doneCount","length","todoCount","todo_header","todo_search","todo_list","ReactDom","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.b23a9125.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ToDoHeader=({toDo, done})=>{\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n          <h1>Todo List</h1>\r\n          <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ToDoHeader;","import React from 'react';\r\n\r\nclass ToDoAddSearch extends React.Component{\r\n    state={\r\n        label:''\r\n    }\r\n\r\n    inputChange=(e)=>{\r\n        this.props.todoSearch(e.target.value);\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    }\r\n    formSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.addListItem(this.state.label);\r\n    }\r\n    render(){\r\n        return(\r\n            <form className=\"item-add-form d-flex todo-form\" \r\n            onSubmit={this.formSubmit}\r\n            >\r\n            <input className=\"form-control search-input\"\r\n            placeholder=\"type to search\"\r\n            onChange={this.inputChange}\r\n            />\r\n        <button type=\"button\"\r\n                className=\"btn btn-sm btn-add-item\"\r\n                onClick={this.formSubmit}\r\n                >\r\n                  <i className=\"fa fa-plus\" ></i>\r\n            </button>\r\n        </form>      \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ToDoAddSearch;","import React from 'react';\r\n\r\nclass ToDoListItem extends React.Component {\r\n\r\n  render(){\r\n    let {label , eventDelete , toggleImportant , toggleDone , done=false , important=false }=this.props;\r\n    let classNames='todo-list-item';\r\n    let classBtnDone='';\r\n    if(done){\r\n      classNames+=' done';\r\n    }\r\n    if(important){\r\n      classNames+=' important';\r\n      classBtnDone+=' imp';\r\n    }\r\n    \r\n  return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={toggleDone}\r\n          >\r\n          {label}\r\n        </span>\r\n  \r\n        <button type=\"button\"\r\n                className={\"btn btn-outline-success btn-sm float-right todo-btn-done\"+classBtnDone}\r\n                onClick={toggleImportant}>\r\n                  \r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n  \r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right \"\r\n                onClick={eventDelete}\r\n                >\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoListItem;","import React from 'react';\r\nimport ToDoListItem from './todo-list-item';\r\n\r\nconst ToDoList=({todos , eventDelete , toggleDone , toggleImportant})=>{\r\n\r\n    const elements=todos.map(elem=>{\r\n    let ClassNames=\"list-group-item\";\r\n    let {visible}=elem;\r\n\r\n    if(visible===false)\r\n        ClassNames+=' hidden';\r\n        \r\n    let { id , ...itemsProps}=elem;\r\n        return (\r\n            <li key={id} className={ClassNames}>\r\n                <ToDoListItem {...itemsProps}\r\n                eventDelete={()=>eventDelete(id)}\r\n                toggleDone={()=>toggleDone(id)}\r\n                toggleImportant={()=>toggleImportant(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n}\r\nexport default ToDoList;","import React from 'react';\r\n\r\nclass BtnFilter extends React.Component{\r\n    changeStatus=()=>{\r\n        this.props.changeFilter(this.props.name);\r\n    }\r\n    render(){\r\n        let classNames=\"btn todo-btn-filter\";\r\n        const {label , active}=this.props;\r\n        const style={\r\n            boxShadow: 'none'\r\n        }\r\n        if(active)\r\n            classNames+=\" btn-info\";\r\n        return(\r\n            <button type=\"button\"\r\n                    onClick={this.changeStatus}\r\n                    style={style}\r\n                    className={classNames}>{label}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BtnFilter;\r\n","import React from 'react';\nimport BtnFilter from './btn-filter';\n\nconst Filter=({status , changeStatus})=>{\n\n  const elements=status.map((status)=>{\n    return (\n      <BtnFilter {...status} changeFilter={changeStatus}/>\n    );\n  });\n  return(\n    <div className=\"wrap-btn-group\">\n        <div className=\"btn-group todo-btn-group\">\n          {elements}\n        </div>\n      </div>\n  );\n}\n\n\nexport default Filter;\n","import React from 'react';\r\n\r\nimport ToDoHeader from './todo-header';\r\nimport ToDoAddSearch from './todo-search';\r\nimport ToDoList from './todo-list';\r\nimport Filter from './filter';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n\r\n    minid=0;\r\n    uniqueId=[1,2,3];\r\n\r\n    createItem=(label)=>{\r\n        return {\r\n            label,\r\n            important: false,\r\n            done:false,\r\n            id: ++this.minid, \r\n            visible: true\r\n        }\r\n    }\r\n    createFilter=(label ,name, bool)=>{\r\n        return{\r\n            label,\r\n            name,\r\n            active: bool,\r\n            key:++this.minid,\r\n        }\r\n    }\r\n    // createId=()=>{\r\n    //     let z=true;\r\n    //     let rand;\r\n    //     const isRand=(num , rand)=>{\r\n    //         return num!==rand;\r\n    //     }\r\n    //     while(z===true){\r\n    //         rand = 1 + Math.random() * (5 - 1)\r\n    //         rand = Math.round(rand); \r\n    //         let bool=this.uniqueId.every((num)=>{\r\n    //             return isRand(num , rand);\r\n    //         });\r\n    //         if(bool){\r\n    //             this.uniqueId[z]=true;\r\n    //             this.uniqueId.push(z);\r\n    //             z=false;\r\n    //         }\r\n    //     }\r\n    //     return rand;\r\n       \r\n    // }\r\n\r\n    state={\r\n        todolist:[\r\n            this.createItem('Выпить чай'),\r\n            this.createItem('Застелить постель'),\r\n            this.createItem('Сделать Уроки'),\r\n        ],\r\n        status:[\r\n            this.createFilter('All', 'all', true),\r\n            this.createFilter('Active','important' , false),\r\n            this.createFilter('Done','done' ,false),\r\n\r\n        ]\r\n    }\r\n\r\n\r\n\r\n    addItem=(text)=>{\r\n        this.setState(({todolist})=>{\r\n            let arr=todolist.slice();\r\n            arr.push(this.createItem(text));\r\n            return{\r\n                todolist:arr,\r\n            }\r\n        });\r\n    }\r\n    deleteItem=(id)=>{\r\n        this.setState(({todolist})=>{\r\n            let arr=todolist.filter((val)=>{\r\n                 return val.id!==id;\r\n             });\r\n             return{\r\n                 todolist:arr,\r\n             }\r\n         });\r\n    }\r\n    toggleImportant=(id)=>{\r\n        this.setState(({todolist})=>{\r\n            \r\n            let arr=todolist.map((item)=>{\r\n                if(item.id===id){\r\n                    item.important=!item.important;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n              todolist: arr\r\n            }\r\n          }); \r\n    }\r\n    toggleDone=(id)=>{\r\n        this.setState(({todolist})=>{\r\n            \r\n            let arr=todolist.map((item)=>{\r\n                if(item.id===id){\r\n                    item.done=!item.done;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n              todolist: arr\r\n            }\r\n          }); \r\n    }\r\n    todoSearch=(str)=>{\r\n        \r\n        this.setState(({todolist})=>{\r\n            let arr=this.state.todolist.slice();\r\n            \r\n\r\n            arr.forEach((item , i)=>{\r\n                if(str!==''){\r\n                    if(item.label.indexOf(str) >-1){\r\n                        item.visible=true;\r\n                    }\r\n                    else{\r\n                        item.visible=false;\r\n                    }    \r\n                }\r\n                else{\r\n                    item.visible=true;\r\n                }\r\n            });\r\n            \r\n\r\n            return{\r\n                todolist: arr\r\n            }\r\n        });\r\n    }\r\n    fielterList=(str)=>{\r\n        let arr=this.state.todolist;\r\n        if(str==='important'){\r\n            arr.forEach((item)=>{\r\n                if(item.important)\r\n                    item.visible=true;\r\n                else\r\n                    item.visible=false; \r\n            });  \r\n        }\r\n        else if(str==='done'){\r\n            arr.forEach((item)=>{\r\n                if(item.done)\r\n                    item.visible=true;\r\n                else\r\n                    item.visible=false;      \r\n            });  \r\n        }\r\n        else{\r\n            \r\n            arr.forEach((item)=>{\r\n                item.visible=true;\r\n            });\r\n        }\r\n        this.setState({\r\n            todolist:arr\r\n        });\r\n    }\r\n    changeStatus=(str)=>{\r\n        let arr_list=this.state.status.slice();\r\n        this.setState(({status})=>{\r\n        \r\n            arr_list.forEach((elem , i)=>{\r\n                if(elem.name===str){\r\n                    elem.active=true;\r\n                }\r\n                else\r\n                    elem.active=false;\r\n            });\r\n            return {\r\n                status:arr_list\r\n            }\r\n       \r\n        });\r\n        this.fielterList(str);\r\n\r\n\r\n    }\r\n    render(){\r\n        const {todolist}=this.state;\r\n        const doneCount=todolist.filter((elem)=>elem.done).length;\r\n        const todoCount=todolist.length-doneCount;\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n              <ToDoHeader toDo={todoCount} done={doneCount} />\r\n              <div className=\"top-panel d-flex\">\r\n                <ToDoAddSearch addListItem={this.addItem} todoSearch={this.todoSearch}/>\r\n               \r\n              </div>\r\n              <Filter changeStatus={this.changeStatus} status={this.state.status}/>\r\n        \r\n              <ToDoList todos={todolist}\r\n              eventDelete={this.deleteItem}\r\n              toggleImportant={this.toggleImportant}\r\n              toggleDone={this.toggleDone}\r\n              />\r\n\r\n            </div>\r\n          ); \r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app';\n\n\n\n\nReactDom.render(<App/> , document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}